name: Anchore Syft SBOM + Grype scan

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: write
  security-events: write   # SARIF yüklemek için gerekli

jobs:
  build-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: write        # Dependency submission API için
      security-events: write # SARIF yüklemek için

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag localbuild/testimage:latest

      # --- SBOM (Syft) ---
      - name: Scan the image and upload dependency results (Syft SBOM)
        uses: anchore/sbom-action@v0
        with:
          image: "localbuild/testimage:latest"
          artifact-name: image.spdx.json
          dependency-snapshot: true


      # --- Grype ile zafiyet taraması ---
      # anchore/scan-action, Grype'ı çağırır ve SARIF üretebilir
      - name: Vulnerability scan with Grype (SARIF)
        uses: anchore/scan-action@v4
        with:
          image: "localbuild/testimage:latest"
          fail-build: false           # İstersen "true" yapıp build'i kırabilirsin
          severity-cutoff: high       # low|medium|high|critical
          output-format: sarif
          only-fixed: true            # sadece fix'i olan bulguları raporla
          acs-report-enable: true     # (opsiyonel) özet rapor

      - name: Upload SARIF to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

      # Scan code using project's configuration on https://semgrep.dev/manage
      - uses: returntocorp/semgrep-action@fcd5ab7459e8d91cb1777481980d1b18b4fc6735
        with:
          publishToken: ${{ secrets.SEMGREP_APP_TOKEN }}
          publishDeployment: ${{ secrets.SEMGREP_DEPLOYMENT_ID }}
          generateSarif: "1"

      # Upload SARIF file generated in previous step
      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: semgrep.sarif
        if: always()